{"version":3,"sources":["components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstants.js","actions/productActions.js","Home.js","constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Navbar.js","components/layout/Footer.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","reportWebVitals.js","index.js"],"names":["MetaData","title","Helmet","Product","product","col","className","src","images","url","alt","to","_id","name","style","width","ratings","id","numOfReviews","price","Loader","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","CLEAR_ERRORS","getAdminProducts","dispatch","a","type","axios","get","data","payload","products","response","message","getProductDetails","getProductReviews","reviews","clearErrors","Range","createSliderWithTooltip","Slider","Home","match","useState","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","alert","useAlert","useDispatch","useSelector","state","loading","error","productsCount","resPerPage","filteredProductsCount","keyword","params","useEffect","link","getProducts","count","marks","1","1000000","min","max","defaultValue","tipFormatter","value","tipProps","placement","visible","onChange","map","cursor","listStyleType","onClick","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","loadUser","user","allUsers","users","Search","history","setKeyword","onSubmit","e","preventDefault","trim","push","placeholder","target","aria-hidden","Navbar","auth","cartItems","cart","render","textDecoration","length","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","success","Footer","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","data-target","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","data-dismiss","aria-label","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","console","log","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","userData","encType","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","href","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","files","Array","from","file","reader","FileReader","onload","readyState","oldArray","readAsDataURL","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","action","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.45fd2009.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst MetaData = ({ title }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{`${title} - SmartBuy`}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default MetaData\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={product.images[0].url}\r\n                    alt=\"description of image\"\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\"> </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\r\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\r\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\r\n\r\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\r\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\r\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\r\n\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\r\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\r\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\r\n\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\n/*\r\nReturns All Products\r\n*/ \r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n       }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n** ADMIN**\r\nNew Product\r\n*/ \r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n** ADMIN**\r\nReturns Product\r\n*/ \r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/*\r\n** ADMIN**\r\nDelete Product\r\n*/ \r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n** ADMIN**\r\nUpdate Product\r\n*/ \r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nReturns Product details\r\n*/ \r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nNew Review\r\n*/ \r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\nReturns Product Review\r\n*/ \r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nDeletes Product Review\r\n*/ \r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/*\r\nClear Errors\r\n*/ \r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport MetaData from './components/layout/MetaData'\r\nimport Product from './components/product/Product'\r\nimport Loader from './components/layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProducts } from './actions/productActions'\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst Home = ({ match }) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 1000000])\r\n    const [category, setCategory] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        {loading ? <Loader /> : (\r\n            <Fragment>\r\n                <MetaData title={'Buy Best Products Online'} />\r\n\r\n                <h1 id=\"products_heading\">Latest EV Cars</h1>\r\n\r\n                <section id=\"products\" className=\"container mt-5\">\r\n                    <div className=\"row\">\r\n\r\n                        {keyword ? (\r\n                            <Fragment>\r\n                                <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                    <div className=\"px-5\">\r\n                                        <Range\r\n                                            marks={{\r\n                                                1: `$1`,\r\n                                                1000000: `$1000000`\r\n                                            }}\r\n                                            min={1}\r\n                                            max={1000000}\r\n                                            defaultValue={[1, 1000000]}\r\n                                            tipFormatter={value => `$${value}`}\r\n                                            tipProps={{\r\n                                                placement: \"top\",\r\n                                                visible: true\r\n                                            }}\r\n                                            value={price}\r\n                                            onChange={price => setPrice(price)}\r\n                                        />\r\n\r\n                                        <hr className=\"my-5\" />\r\n\r\n                                        <div className=\"mt-5\">\r\n                                            <h4 className=\"mb-3\">\r\n                                                Categories\r\n                                            </h4>\r\n\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map(category => (\r\n                                                    <li\r\n                                                        style={{\r\n                                                            cursor: 'pointer',\r\n                                                            listStyleType: 'none'\r\n                                                        }}\r\n                                                        key={category}\r\n                                                        onClick={() => setCategory(category)}\r\n                                                    >\r\n                                                        {category}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n\r\n                                        <hr className=\"my-3\" />\r\n\r\n                                        <div className=\"mt-5\">\r\n                                            <h4 className=\"mb-3\">\r\n                                                Ratings\r\n                                            </h4>\r\n\r\n                                            <ul className=\"pl-0\">\r\n                                                {[5, 4, 3, 2, 1].map(star => (\r\n                                                    <li\r\n                                                        style={{\r\n                                                            cursor: 'pointer',\r\n                                                            listStyleType: 'none'\r\n                                                        }}\r\n                                                        key={star}\r\n                                                        onClick={() => setRating(star)}\r\n                                                    >\r\n                                                        <div className=\"rating-outer\">\r\n                                                            <div className=\"rating-inner\"\r\n                                                                style={{\r\n                                                                    width: `${star * 20}%`\r\n                                                                }}\r\n                                                            >\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-6 col-md-9\">\r\n                                    <div className=\"row\">\r\n                                        {products.map(product => (\r\n                                            <Product key={product._id} product={product} col={4} />\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <div className=\"row\">\r\n                            {products.map(product => (\r\n                                <Product key={product._id} product={product} col={3} />\r\n                            ))}\r\n                                 </div>\r\n                            )}\r\n\r\n                    </div>\r\n                </section>\r\n\r\n                {resPerPage <= count && (\r\n                    <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination\r\n                            activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage}\r\n                            totalItemsCount={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'}\r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass=\"page-item\"\r\n                            linkClass=\"page-link\"\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n            </Fragment>\r\n        )}\r\n\r\n    </Fragment>\r\n)\r\n}\r\n\r\n\r\nexport default Home\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\r\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\r\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\r\n\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\r\n\r\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n/*\r\nUser Login\r\n*/\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nUser Register\r\n*/\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nUser profile\r\n*/ \r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/profile')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nUpdate profile\r\n*/ \r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/profile/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nUpdate password\r\n*/ \r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nForgot password\r\n*/ \r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nReset password\r\n*/ \r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nLogout user\r\n*/\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nADMIN ROUTES\r\n*/\r\n\r\n/*\r\n** ADMIN**\r\nGet All Users\r\n*/ \r\nexport const allUsers = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_USERS_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/admin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data.users\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/*\r\n** ADMIN**\r\nUpdate user\r\n*/ \r\n\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n** ADMIN**\r\nGet User Details\r\n*/ \r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n** ADMIN**\r\nDelete User\r\n*/ \r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_USER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nClear Errors\r\n*/ \r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { useState } from 'react'\r\n\r\nconst Search = ({ history }) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={searchHandler} >\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search_field\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Product Name ...\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"search_btn\" className=\"btn\">\r\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search'\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                        <span id=\"header\">SmartBuy</span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <span id=\"usename\">{user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Admin Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/myorders\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n                    \r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n             <footer className=\"py-1\">\r\n                <p className=\"text-center mt-1\">\r\n                    SmartBuy 2020-2021, All Rights Reserved\r\n                </p>\r\n            </footer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <div class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} class=\"review-card my-3\">\r\n                    <div class=\"rating-outer\">\r\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                    </div>\r\n                    <p class=\"review_user\">by {review.name}</p>\r\n                    <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListReviews\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\r\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'","import axios from 'axios'\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\n\r\n\r\n/*\r\nAdd Item to Cart!\r\n*/\r\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n/*\r\nRemove Item From Cart\r\n*/\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: REMOVE_ITEM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\n\r\n/*\r\nSave Shipping infoclea\r\n*/\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport ListReviews from '../review/ListReviews'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, match.params.id, reviewError, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber >= product.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={product.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{product.name}</h3>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">${product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                            </div>\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                            <hr />\r\n\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Submit Your Review\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n                                            <ul className=\"stars\" >\r\n                                              <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                              <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                              <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                              <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                              <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                             </ul>\r\n\r\n                                                 <textarea\r\n                                                    name=\"review\"\r\n                                                    id=\"review\" className=\"form-control mt-3\"\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                   >\r\n\r\n                                                   </textarea>\r\n\r\n                                               <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                    {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n\r\n            {shipping ? <Link to='shippping' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Shipping</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Shipping</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Confirm Order</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Confirm Order</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {payment ? <Link to='/payment' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Payment</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Payment</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { Fragment, useState } from 'react'\r\nimport { countries } from 'countries-list'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingInfo } from '../../actions/cartActions'\r\n\r\nconst Shipping = ({ history }) => {\r\n\r\n    const countriesList = Object.values(countries)\r\n\r\n    const { shippingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\r\n        history.push('/confirm')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Shipping Info'} />\r\n\r\n            <CheckoutSteps shipping />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shipping\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Confirm Order'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder\r\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\n\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\n\r\n/*\r\nCreate Order\r\n*/\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nReturn User Orders\r\n*/\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/myorders')\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nReturns order details\r\n*/\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n*** ADMIN ***\r\nReturn all orders\r\n*/\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n*** ADMIN ***\r\nUpdate Order\r\n*/\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\n*** ADMIN ***\r\nDelete Order\r\n*/\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ORDER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nClear Errors\r\n*/\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrder, clearErrors } from '../../actions/orderActions'\r\n\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\r\n\r\nimport axios from 'axios'\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\nconst Payment = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            console.log(clientSecret);\r\n\r\n            if (!stripe || !elements) {\r\n                return;\r\n            }\r\n\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false;\r\n            } else {\r\n\r\n                // The payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n\r\n                    dispatch(createOrder(order))\r\n\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error('There is some issue while payment processing')\r\n                }\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Order Success'} />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/myorders\">Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { myOrders, clearErrors } from '../../actions/orderActions'\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'My Orders'} />\r\n\r\n            <h1 className=\"my-5\">My Orders</h1>\r\n\r\n            {loading ? <Loader /> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n                />\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\r\n\r\nconst OrderDetails = ({ match }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Details'} />\r\n\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p>${item.price}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n      \r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n\r\n    \r\n    const onChange = e => {\r\n\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Register User'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mb-3\">Register</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"register_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            REGISTER\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Your Profile'} />\r\n\r\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n                    <div className=\"row justify-content-around mt-5 user-info\">\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <h4>Full Name</h4>\r\n                            <p>{user.name}</p>\r\n\r\n                            <h4>Email Address</h4>\r\n                            <p>{user.email}</p>\r\n\r\n                            <h4>Joined On</h4>\r\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                            {user.role !== 'admin' && (\r\n                                <Link to=\"/orders/myorders\" className=\"btn btn-danger btn-block mt-5\">\r\n                                    My Orders\r\n                                </Link>\r\n                            )}\r\n\r\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Change Password\r\n                            </Link>\r\n                            \r\n                            <Link to=\"/profile/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/profile')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) { }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updatePassword, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Password updated successfully')\r\n\r\n            history.push('/profile')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('password', password);\r\n\r\n        dispatch(updatePassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label for=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message)\r\n        }\r\n\r\n    }, [dispatch, alert, error, message])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n\r\n        dispatch(forgotPassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Forgot Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Forgot Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false} >\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Password updated successfully')\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'New Password Reset'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\r\n                            className=\"fa fa-product-hunt\"></i> Products</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n                            <li>\r\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { allOrders } from '../../actions/orderActions'\r\nimport { allUsers } from '../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(allOrders())\r\n        dispatch(allUsers())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n\r\n                    {loading ? <Loader /> : (\r\n                        <Fragment>\r\n                            <MetaData title={'Admin Dashboard'} />\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductsList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Product deleted successfully');\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst NewProduct = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully');\r\n            dispatch({ type: NEW_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n\r\n    const productId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId));\r\n        } else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\r\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst OrdersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.allOrders);\r\n    const { isDeleted } = useSelector(state => state.order)\r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Order deleted successfully');\r\n            history.push('/admin/orders');\r\n            dispatch({ type: DELETE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteOrderHandler = (id) => {\r\n        dispatch(deleteOrder(id))\r\n    }\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>s\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n    const { error, isUpdated } = useSelector(state => state.order)\r\n\r\n    const orderId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getOrderDetails(orderId))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            alert.success('Order updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, orderId])\r\n\r\n\r\n    const updateOrderHandler = (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n\r\n        dispatch(updateOrder(id, formData))\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Process Order # ${order && order._id}`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {loading ? <Loader /> : (\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n\r\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\r\n\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n\r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={(e) => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProcessOrder\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UsersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated } = useSelector(state => state.user);\r\n    const { user } = useSelector(state => state.userDetails)\r\n\r\n    const userId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(user && user._id !== userId);\r\n        if (user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Update User`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"name\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={(e) => setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductReviews = () => {\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login' />\r\n                        }\r\n\r\n                        if (isAdmin === true && user.role !== 'admin') {\r\n                            return <Redirect to=\"/\" />\r\n                        }\r\n\r\n                        return <Component {...props} />\r\n                    }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;","import {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_RESET,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_RESET,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_RESET,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const productsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_PRODUCTS_REQUEST:\r\n        case ADMIN_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n\r\n        case ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                productsCount: action.payload.productsCount,\r\n                resPerPage: action.payload.resPerPage,\r\n                filteredProductsCount: action.payload.filteredProductsCount\r\n            }\r\n\r\n        case ADMIN_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n\r\n        case ALL_PRODUCTS_FAIL:\r\n        case ADMIN_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload.success,\r\n                product: action.payload.product\r\n            }\r\n\r\n        case NEW_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_PRODUCT_REQUEST:\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n\r\n        case DELETE_PRODUCT_FAIL:\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewsReducer = (state = { review: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_REVIEWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case GET_REVIEWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                reviews: action.payload\r\n            }\r\n\r\n        case GET_REVIEWS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_RESET,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n            } from '../constants/userConstants'\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false,\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            }\r\n\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n        case UPDATE_USER_REQUEST:\r\n        case DELETE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n        case UPDATE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n        case UPDATE_USER_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n\r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n\r\n        case ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n\r\n            if (isItemExist) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_ITEM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n            }\r\n\r\n\r\n        case SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_RESET,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case CREATE_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                totalAmount: action.payload.totalAmount\r\n            }\r\n\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_ORDER_REQUEST:\r\n        case DELETE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_FAIL:\r\n        case DELETE_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport './Home.css';\n\nimport Navbar from './components/layout/Navbar'\nimport Footer from './components/layout/Footer'\nimport './components/layout/Navbar.css';\nimport './components/layout/Loader.css';\nimport './components/layout/Footer.css';\n\n\nimport ProductDetails from './components/product/ProductDetails'\nimport './components/product/productStyle.css'\nimport './components/product/productDetailsStyle.css'\n\n// Cart Imports\nimport Cart from './components/cart/Cart'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder'\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n//Cart CSS\nimport './components/cart/Cart.css';\nimport './components/cart/CheckoutSteps.css';\nimport './components/cart/ConfirmOrder.css';\n\n// Order Imports\nimport ListOrders from './components/order/ListOrders'\nimport OrderDetails from './components/order/OrderDetails'\n\n// Auth or User imports\nimport Login from './components/user/Login'\nimport Register from './components/user/Register'\nimport Profile from './components/user/Profile'\nimport UpdateProfile from './components/user/UpdateProfile'\nimport UpdatePassword from './components/user/UpdatePassword'\nimport ForgotPassword from './components/user/ForgotPassword'\nimport NewPassword from './components/user/NewPassword'\nimport './components/user/profile.css'\n\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard'\nimport ProductsList from './components/admin/ProductsList'\nimport NewProduct from './components/admin/NewProduct'\nimport UpdateProduct from './components/admin/UpdateProduct'\nimport OrdersList from './components/admin/OrdersList'\nimport ProcessOrder from './components/admin/ProcessOrder'\nimport UsersList from './components/admin/UsersList'\nimport UpdateUser from './components/admin/UpdateUser'\nimport ProductReviews from './components/admin/ProductReviews'\nimport './components/admin/Dashboard.css';\n\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux'\nimport store from './store'\nimport axios from 'axios'\n\n// Payment\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n\n  }, [])\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container container-fluid\">\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n          <Route path=\"/cart\" component={Cart} exact />\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          }\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/profile\" component={Profile} exact />\n          <ProtectedRoute path=\"/profile/update\" component={UpdateProfile} exact />\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n\n          <ProtectedRoute path=\"/orders/myorders\" component={ListOrders} exact />\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n        </div>\n\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\n\nReactDOM.render(\n  <Provider store={store} >\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}